// Generated by LiveScript 1.5.0
(function(){
  var Ethnamed, abi, getContractInstance, registryContract, builder;
  Ethnamed = require('./addresses.json').Ethnamed;
  abi = require('./Ethnamed.abi.json');
  getContractInstance = function(abi, addr){
    return function(web3){
      var Contract;
      Contract = web3.eth.contract(abi);
      return Contract.at(addr);
    };
  };
  registryContract = getContractInstance(abi, Ethnamed);
  builder = function(contract, name){
    return function(ether){
      var i$, args, res$, j$, cb, transaction;
      res$ = [];
      for (j$ = 1 < (i$ = arguments.length - 1) ? 1 : (i$ = 1); j$ < i$; ++j$) {
        res$.push(arguments[j$]);
      }
      args = res$; cb = arguments[i$];
      transaction = {
        to: Ethnamed,
        value: web3.toWei(ether, 'ether').toString(),
        data: contract.getData.apply(null, args)
      };
      return web3.eth.sendTransaction(transaction, cb);
    };
  };
  module.exports = function(web3){
    var contract, registerName, ref$;
    contract = registryContract(web3);
    registerName = builder(contract, 'registerName');
    return ref$ = {}, import$(ref$, contract), ref$.registerName = registerName, ref$;
  };
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
